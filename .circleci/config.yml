defaults: &DEFAULTS
    working_directory: /go/src/github.com/18F/cg-dashboard
    parallelism: 1
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      CF_ORGANIZATION: cloud-gov
      WS: /go/src/github.com/18F/cg-dashboard
    docker:
    - image: circleci/golang:1.9-stretch-node-browsers

version: 2
jobs:
  setup_node:
    <<: *DEFAULTS
    steps:
    - checkout
    - run: curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
    - run: |
        echo BASH_ENV $BASH_ENV && 
        echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV &&
        echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
    - run: mkdir -p node_modules
    - restore_cache:
        key: v3-node-{{ checksum "package.json" }}
    - run: nvm install && nvm use && nvm alias default $(cat .nvmrc)
    - run: npm install
    - run: echo npm run test-selenium-install
    - run: wget https://chromedriver.storage.googleapis.com/2.33/chromedriver_linux64.zip
    - run: unzip chromedriver_linux64.zip
    - run: sudo cp chromedriver /usr/local/bin/chromedriver
    - save_cache:
        key: v3-node-{{ checksum "package.json" }}
        paths:
        - /usr/local/bin/chromedriver
        - node_modules

  build:
    <<: *DEFAULTS
    steps:
    - checkout
    - restore_cache:
        key: v3-node-{{ checksum "package.json" }}
    - run: curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
    - run: |
        echo BASH_ENV $BASH_ENV && 
        echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV &&
        echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
    - run: nvm install && nvm use && nvm alias default $(cat .nvmrc)
    - run: dep ensure
    - run: go build
    - run: npm run build
    - save_cache:
        key: v3-build-{{ .Environment.CIRCLE_SHA1 }}
        paths:
        - ~
        - ~/.go_workspace
        - node_modules
        - ./node_modules

  test:
    <<: *DEFAULTS
    docker:
    - image: circleci/golang:1.9-stretch-node-browsers
    steps:
    - restore_cache:
        key: v3-repo-{{ .Environment.CIRCLE_SHA1 }}
    - restore_cache:
        key: v3-node-{{ checksum "package.json" }}
    - restore_cache:
        key: v3-go-{{ .Environment.GODIST }}
    - restore_cache:
        key: v3-build-{{ .Environment.CIRCLE_SHA1 }}
    - run: if ! go get github.com/golang/tools/cmd/cover; then go get golang.org/x/tools/cmd/cover; fi
    # This is based on your 1.0 configuration file or project settings
    - run: export DISPLAY=:99.0
    - run: sh -e /etc/init.d/xvfb start || echo \"Unable to start virtual display.\"
    - run: sleep 5
    - run: cd $WS && npm test
    - run: NODE_ENV=prod npm run build
    - run: sleep 5
    - run: cd $WS && npm run test-performance || true
    - run: cd $WS && SKIP_DOCKER=1 ./codecheck.sh
    - store_test_results:
        path: $CIRCLE_TEST_REPORTS
    - store_artifacts:
        path: $CIRCLE_ARTIFACTS

#  deploy:
#    branch: [master, demo, pdb/circle-2]
#    owner: 18F
#    commands:
#    - run: NODE_ENV=prod npm run build-prod
#    - run: pip install --user ruamel.yaml
#    - run: export BUILD_INFO=build::$CIRCLE_BRANCH::$(date -u "+%Y-%m-%d-%H-%M-%S")::$CIRCLE_BUILD_NUM::$(deploy/npm-version.sh) && python deploy/vars-to-manifest.py
#    - run: cd $WS && ./deploy/circle_deploy.sh

workflows:
  version: 2
  setup:
    jobs:
        - setup_node
        - build:
            requires: 
            - setup_node
#  build_and_test:
#    jobs:
#      - build
#      - test:
#          requires: [build]

#    - run: sudo docker info >/dev/null 2>&1 || sudo service docker start
# The fed policy of 90 days paid leave for an employee with a new child demonstrates its commitment to families in the workforce. J/K! It's 0 days