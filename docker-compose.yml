version: '2'
services:
  app:
    extends: go
    working_dir: /go/src/github.com/18F/cg-dashboard
    command: run server.go
    depends_on:
      - mail
      - redis
    ports:
      - "8002:8002"
    networks:
      - servicesNetwork
    environment:
      CONSOLE_API_URL: https://api.local.pcfdev.io
      CONSOLE_HOSTNAME: http://localhost:8002
      CONSOLE_LOGIN_URL: https://uaa.local.pcfdev.io
      CONSOLE_LOG_URL: https://loggregator.local.pcfdev.io
      CONSOLE_UAA_URL: https://uaa.local.pcfdev.io
      SESSION_BACKEND: redis
      LOCAL_CF: "1"
      PORT: 8002
      VCAP_APPLICATION: '{}'
      VCAP_SERVICES: >
        {
          "user-provided": [{
            "credentials": {
               "CONSOLE_CLIENT_ID": "dashboard-local",
               "CONSOLE_CLIENT_SECRET": "notarealsecret",
               "SESSION_KEY": "notarealsessionkey",
               "SMTP_FROM": "no-reply@cloud.gov",
               "SMTP_HOST": "smtp.fake.com",
               "SMTP_PASS": "",
               "SMTP_PORT": "25",
               "SMTP_USER": ""
            },
            "name": "dashboard-ups",
            "label": "user-provided"
          }],
          "redis28": [{
            "credentials": {
               "hostname": "redis.service.fake.kubernetes",
               "password": "",
               "port": "6379"
            },
            "uri": "redis://:@redis.service.fake.kubernetes:6379",
            "label": "redis28",
            "name": "dashboard-redis",
            "tags": [
             "redis28",
             "redis"
            ]
          }]
        }
  redis:
    image: "redis:2.8"
    volumes:
      - redis-data:/data
    networks:
      servicesNetwork:
        aliases:
          - redis.service.fake.kubernetes
  mail:
    image: tophfr/mailcatcher
    ports:
      - 8025:80 # for the web UI
    networks:
      servicesNetwork:
        aliases:
          - smtp.fake.com
  npm:
    image: node:6.11.0
    working_dir: /cg-dashboard
    entrypoint: ./devtools/node/install_deps_then npm
    volumes:
      - global-node-modules:/usr/local/lib/node_modules
      - npm-cache:/root/.npm
      - node-modules:/cg-dashboard/node_modules
      - .:/cg-dashboard
      - cg-style-node-modules:/cg-style/node_modules
      - ../cg-style:/cg-style
  watch:
    extends:
      service: npm
    command: npm run watch
    working_dir: /cg-dashboard
  watch_cg_style:
    extends:
      service: npm
    working_dir: /cg-style
    command: npm run watch
  go:
    image: golang:1.8.3
    environment:
      - GOPATH=/go
      # not a GO convention but useful for running go tests.
      - BASE_PATH=/go/src/github.com/18F/cg-dashboard
      - DOCKER_IN_DOCKER=1
    volumes:
      - .:/go/src/github.com/18F/cg-dashboard
      - go-bins:/go/bin/
      - go-dep-tool-src:/go/src/github.com/Masterminds
      # needed for running go tests that use https://github.com/ory/dockertest
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /go/src/github.com/18F/cg-dashboard
    entrypoint: ./devtools/golang/install_deps_then go
    networks:
      - servicesTestNetwork
volumes:
  node-modules:
  cg-style-node-modules:
  npm-cache:
  global-node-modules:
  go-bins:
  go-dep-tool-src:
  redis-data:

networks:
  servicesNetwork:
    driver: bridge
  # needed for running go tests that use https://github.com/ory/dockertest
  servicesTestNetwork:
    driver: bridge
# commands

# dependencies
