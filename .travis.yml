language: go
sudo: false
go:
- 1.5
before_install:
- npm install
- pip install --user ruamel.yaml
script:
- "./codecheck.sh -u"
- npm test
- go test ./...
- cd acceptance && go test -tags acceptance && cd ..
branches:
  only:
  - master
  - production
before_deploy:
- export BUILD_INFO=build-$TRAVIS_BRANCH-$(date -u "+%Y-%m-%d-%H-%M-%S")-$TRAVIS_BUILD_NUMBER
# Extract any encrypted env vars and put them into the manifests/manifest-master.yml
- python deploy/travis-vars-to-manifest.py
# Download the go-bindata binary, which is necessary for the CF CLI
- go get -u github.com/jteeuwen/go-bindata/...
- export GOBINDATA_BIN=$(which go-bindata)
- export PATH=$GOBINDATA_BIN:$PATH
- echo $GOBINDATA_BIN
# Download the autopilot binary
- go get -u github.com/concourse/autopilot
- export GOAUTOPILOT_BIN=$(which autopilot)
- export PATH=$GOAUTOPILOT_BIN:$PATH
# Make sure we can execute the deploy script.
- chmod a+x deploy/travis_deploy.sh
# Download the CF CLI Soruce files
- export CLIPATH=$HOME/gopath/src/github.com/cloudfoundry/cli
- export GOPATH=$HOME/gopath/$CLIPATH/Godeps/_workspace:$HOME/gopath
- mkdir -p $CLIPATH
- git clone --branch v6.12.3 https://github.com/cloudfoundry/cli.git $CLIPATH
# Build the CF CLI
- chmod a+x deploy/prepare_deploy.sh
- deploy/prepare_deploy.sh
deploy:
- provider: script
  skip_cleanup: true
  script: deploy/travis_deploy.sh
  on:
    branch:
    - master
    - production
env:
  global:
  - CF_API=https://api.cloud.gov
  - CF_ORGANIZATION=cf-deck
  - CONSOLE_UAA_URL=https://uaa.cloud.gov/
  - CONSOLE_API_URL=https://api.cloud.gov/
  - CONSOLE_LOG_URL=https://loggregator.cloud.gov/
  - CONSOLE_LOGIN_URL=https://login.cloud.gov/
  - CONSOLE_HOSTNAME=http://localhost:9999/
  - CONSOLE_TEST_ORG_NAME=CF-DECK
  - CONSOLE_TEST_SPACE_NAME=testSpace01
  - CONSOLE_TEST_APP_NAME=testapp01
  - CONSOLE_TEST_HOST=testtestroute1
  - CONSOLE_TEST_DOMAIN=apps.cloud.gov
  - secure: xn/EXShpj51D9TTQgwrOj5H3c7gr41i+KnoOesfJDc1twY4reS8bWIBZU1zq2xaMsA8sus97Byk5MSXKifIzO5Gk6nyKzBo1z0HIXhpAVBy8RwNpLvUZrjrtz/24FmeQWs7McIfPZ92UWsGTI0BGVsSbIeAzeAkwIXb0/M1HUG4r7wgEOF+dlr3pYOtQBJ45wsst+n1RzUbWyHP7UPCcNHSrI7Q1y4odtK0MLMIozWBm5TbhpJnN4ylQCVPg2077Bsb5emg0G1K2Gfplhzvsu2+1BOekBHBsA4MJIPA1Y4dB2rkHeRvWgIyjg+w+wDyq0Kd4yP5Kku/N1U2b1llaOOLNABGYmfkteFgugHv73xfPoN2uLRIrWOpxywp+r/7qVDO8s5ZjjAGQfnFql53JBxD7/eAKH4sqaR5uW1uSpwpAmjaNAa7wcmgFKi0nyFovIBgbTH37M8nSDIS6/YfYYRiGMQA3piiUvBqVFpguSDrgup8/O8KsMn2SfPLvk7GG5bb8JOO0dWzXFuq1CWSzU4cIvcYfVkwmOKjpvKXYX1ebZz3T7i+ZL1fijQKFMlzpQGNPqHZJ/QwjH45G+Nw8Cz4waxP8l4C4ros5rIgR6CdYoRqfrhGMODum/JmoChM85hVbZbRw0AMJ+mRgprqDkru1AGSeBrxxSnwmX6eS0bs=
  - secure: GJ6iBRZ0NAw9d/RxA0BjyIRawDYUd5oVPRSEvmRWzxjw+eghBCKgp/K3RW7D6hbKUJTJ/A95Tm1cy74OgUffMkD5q5I6AJaf0LHp5rNSVP5Izu0ewbh95UE6WbFhytJjLu0Qsl0uW9v5/omG4Qm7odvvnWGO8yGDJpAbO+rMG1I09puy8n5QNESuUX0pwJKsQ1E/3uHwPfhFUacKl0bFHIEM8hLA9FWV5pl5p+cbx3fAU4U6hajB9Pur9zlRWb88nFOjrDE86RpA6Ihcu6qWERmOz441NWinUfGoLZruWp4YVhErZVp2KcOpMWyl5ObQ8Bu8JWyT9tGInyI9KPO+b5UI7i1jUkRJyQT2/snRdWcvYMWPe7gyQMz8VIogR/UUGOCBUGFm2+N03cb+UV8NxfSuR7IruX+8fWw0HvL02QYGWB1pTbebpdwn+V/ZO0+6DrOn62BVpxVqE8mNVS9Z2927GDsXRBA/C/KAHK6zaa1Vk5ADCDCFe3meysBp6BIWXKRDlnXgsomQzjAZ+Ri5us5zPWYQnIjvbJGUwXOpcFn7HiAQf0JzhvTb6s1F64Lr9yk82+rqtMSf5H3WW6yaJUirGtxlb1McD4BnsIH7F/C0ALJdZy35ZCKFhvFbGdsBeZGl6AYIuNqKz3r5U6gYycrRQ+/lGftVVRUTk90gR8A=
  - secure: uvGaSKmxNLQfXt5v1+1dcamIyPS4RcmaGV/gQIQwMO5Abh4/I4Tt77yQbfsujbEv9ScvJIvoGzpWNZN8BcbvC5c0H+gLzgb/06lDLxp4V9N1Oz3c3xFgWkGm/snlwu83GOmCzAPyrjRWHUDfXwZ7Q6ZXgnwRojN4Agt+IVvF65ISxh9y071k62IKBTX3o4PbP0MFxldDlcy9biZy1rn+CyPFOGDnAbv/cLwporsF8KLM3cCUrqRA7cFl6MDYZgsSDw9MmIrbgd7LL5TCotKPFvlwSzTciwyWFrUwtfWyoVnVmwgihxD5mDu2weR8cjRHceWQWM4JMYoPB7gyAwXGLk1V/D6n5+bquYoWZ+cqLANCfpHqXmgTnliWmX10UnvUHoJIBBmaYR3NqD5hJa4cHhXbo0GAS4/6auXuUpE3QIWDe+nMDp/0t/1ClxWghXLWtB+kXDvBTOFvVps2YsV6TCYh0KeiqeFeZN9BLtiWhm9kfrgcaflj9StUyhJM2T2YTDsFgJII63RDia3llwUHrKoizGjGAajgLx/ZAulJEI3KjktRedzWlgQvLOqk83CLrNd+w96rF9bBdtNbo8bEvygEhWhkbWO4MBnUQj6OFtUuJh/fBwx/IKfWAt49XxV1SOEFbpOyMA79ULM4KtNC6ORFD8Z/t7Uu44Fkq8GMBTU=
  - secure: mtat9B37f1xgoAgA5hxPO8vShP1wT7a9OWpDNo2W6sUhs65oFn6SoRe7/DU6QhnDV9jYn9SBpQ0K9K6VmvZbMiOwgn3XBuHW5UIQMG8ehGjxZ4DAZ3EtU/WQMsCAv9DfSH3RlP53v8goW2+KXxjefz8R0YR5KbiOK90/lg9zCYsv11KVu1etiLGvOBRHwDhV2Qayk67LMBLIf5mxGzKDA2Itqd03PB69tqz5sR4uyjxAcXWT+1+2oaiQtpBoD1ubEWUmQ5xSynJmI1/4BNSSeAhfjn405o70/ZO0l212bRBYlnQeIQCcjZUsWhNH1PYie+lavA6UngCfQEO7X7iS9NxGPWSzISy5kOYxntJKN/cVcX9QCb7QX/C+zJzjUU5paJLiRhRcojGQZXNpC+X8ALPuEMDRwyzVsBnqF+FZONb9ona/phqdMBawSzEZQGuGvI2+x1uLswYKv5iW0jJEhZ+MsSq+jRjUU6RnZtauX3QGZu6QYiaDc9McLof0YGenL95nl80UkbqvpNq3rVqw14rz4hPIZHiynUhJB6jY3wDQyiaBxhGkUiGx5SlxQWqME5/nGD5xYlj8ImNM0n7m21QS4WMxuRpRiAaVxfixCyKZxa5UEyEx/MDWVPnfurPRlNxeLl5ZVqPGB57Rh3HCBsuUKsqI1I3liuN7o7P05kc=
  - secure: UoTc2R1pw6IAzshPFBpn2nQfwfoCtO/e7kTk2yr6WEOH3znWgSULibFw8pe6updsd+byyxSrFFZXk7H5b5qY8lWiWkOm3L5o9Aj2/h2+m2ayo7HeeXMc3YiPW8guRz0wS+jTGkquA0KESyNZpruZO5BJ7lT8iylNiaFhdTYUZHXkvZbdNsmQB+ggM2+TYMQQOQ3ncUdmwZUUkRGxeVHYC2/nhDMRxvv8gZ2GD9CkUW0/Y/zVvjmm/fObAPpJk/XU1sdOs3KDqbnDRswpcZ/MPAsTS8seVXUwEgPnqUGV8E1y31CpXtE4jOyFASKyt9VcSyI8mMjEVo62JwpLWbVs//Bh/40bavfsnU1zoRGpm9gF9X3Mgb27Ua1YWzBmrrlrzHlZD8HImvYB+nZ9hpbrnX4f8H4W6arJAqcw8RKOagrXEgyUUCvXbK0HtbsfFkSjeiO3/zQo6MgaJ906o978Ws2LkOlqEasOPFhBgzPMCO7NWsHIWMCnuK1/wkp7BrhMKmnOgOR6M6z2esBOsYOgXOhzSsno4FZY6tXYGo9V+oicVBhSsulSpT/wfIablc0kSc0fGlWxEVqM2k7zP28Q4aY0L9PAERjCz1oqWwMUdVP01e4fAekHhjwwJsmnlEqOGZ4jRY4ClGl85ldtynwXyafvd7i2jSujXXtMY2TK7/0=
  - secure: jhkUt4SwXZ85hLl6Aqbivze+8E9Ec4YftHiNXJTaZ9ek8tjoD+TdrkdnMY1U1V5EX2R9zTlvSCEvBL/UpmWRhsydw6vFuzAJRa7+3A0ezableZaFw4wCHeMYGa/OL+kA4+4GVEt6ZAPle1WSw9I2TR57UyYf5sdDCe9ZMOuvCDM/Mk1kWaqNspnulZiI/s5yIQhPqW7tHQRf4YCCQLCew7AbKWqZL+1Msgs9gENC7T8C5sRhe8JtTPC6ZOTP6GjVqFJIs0M3oMVNBggEB4avVts3WQ6LxE75oORWEKMxQi2cU5luvTOm5g9TX2a4nfSsFxqzqN3Szt7qwO0V4r4ZHhWC7a1GwLRJsdwWM9DDqQcYSkhLyXo8p3K8/duCYnJbITQ+4ZO1T52TlZseWuDt8/q2OtZg5ttZNa9lTBSKVH3DUAHZnlmJRtDUOzGYLhemvk7H8qH3fKbQ7B0xE+UpVER69eNe3kOsEUAHXlqmEeutfd05uHWFiXl8nGTMCIcFd6ToMfrrW+96UBm96V5lrLhL/lzv5k4vp5NXXgjx8sc9TCVxFdD9kM7A/K3KvqEH5l0+PdAcZx0YkUoNTSN0AuB8qcCJJOrwjJ2Wr6bEuUrdCDr4MSTLAsDTcejL5bTPwdRX71n4hIDG/8wlTx1GygIhVwodEzP2gACneVhewNs=
